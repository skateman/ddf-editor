.de {
  .de-component-wrapper {
    display: flex;
    align-items: stretch;
    padding: 0px 10px 0px 10px;
    position: relative;

    @mixin dashed-border {
      margin: 10px 0px 10px 0px;
      border: 2px dashed rgba(0, 0, 0, 0.1);
    }

    @mixin gradient($rotate) {
      background: linear-gradient($rotate, rgba(255,255,255,0) 60%, rgba(0,221,255,0.2) 100%);
    }

    &.drag {
      opacity: 0.5;
    }

    &:not(.drag) {
      .de-component-overlay {
        .hover-top {
          @include gradient(180deg);
        }

        .hover-bottom {
          @include gradient(0deg);
        }
      }
    }

    .de-component-item {
      @include dashed-border;
      padding: 10px 10px 10px 10px;
      width: 100%;
    }

    .de-component-handle {
      margin: 10px 0px 10px 0px;
      background-color: rgba(0, 0, 0, 0.1);
      width: 1em;
      z-index: 10;
      cursor: grab;
    }

    .de-component-toolbox {
      @include dashed-border;
      width: 2em;
      z-index: 10;
      border-left: none;

      ul {
        list-style-type: none;
        padding-left: 0;

        li {
          cursor: pointer;
        }
      }
    }

    .de-component-overlay {
      // To avoid double border glitches with the borders when dragging an object, there is an offset on the overlays
      // for compensating the border thickness. This way the upper item's bottom border is being rendered at the same
      // position as the lower item's top border. If an item is being moved between the drop overlays of two objects,
      // the two borders switch each other seamlessly.
      $border-thickness: 2px;
      position: absolute;
      top: -$border-thickness;
      right: 0;
      bottom: 0;
      left: 0;

      & > div {
        height: 50%;

        &.over {
          &.overlay-top {
            border-top: $border-thickness solid rgba(0, 0, 0, 0.4);
          }
          &.overlay-bottom {
            border-bottom: $border-thickness solid rgba(0, 0, 0, 0.4);
          }
        }
      }
    }
  }

  &.drag .de-component-wrapper {
    .de-component-handle, .de-component-toolbox {
      z-index: auto;
    }
  }

  .de-tab-header-wrapper {
    .de-tab-header-overlay {
      // In order to avoid having a dead spot in the drop zone between the tabs, it is necessary for the two overlays
      // to cover each other at least by a single pixel. Of course this has to be compensated with the border width.
      $border-thickness: 2px;
      position: absolute;
      top: 0;
      right: calc(#{-$border-thickness} - 1px);
      bottom: 0;
      left: -1px;

      & > div {
        width: 50%;
        height: 100%;
        display: inline-block;

        &.over {
          &.overlay-left:hover {
            border-left: $border-thickness solid rgba(0, 0, 0, 0.4);
          }

          &.overlay-right:hover {
            border-right: $border-thickness solid rgba(0, 0, 0, 0.4);
          }
        }
      }
    }
  }
}

ul.de-toolbox {
  width: 100%;
  padding-left: 0;
  list-style-type: none;
  border: 2px dashed rgba(0, 0, 0, 0.1);

  & > li.toolbox-field {
    width: 100%;
    text-align: center;
    border: 2px dashed rgba(0, 0, 0, 0.1);

    .toolbox-field-inner {
      cursor: grab;

      .icon {
        font-size: xx-large;
      }
    }

  }
}
